{"version":3,"sources":["../../src/error/RepositoryNotTreeError.ts"],"names":[],"mappings":";;;AAAA,kCAAsC;AAEtC;;GAEG;AACH;IAA4C,kDAAK;IAG7C,gCAAY,MAAyC;QAArD,YACI,iBAAO,SAWV;QAdD,UAAI,GAAG,wBAAwB,CAAC;QAI5B,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,CAAC;QAC9D,IAAI,UAAkB,CAAC;QACvB,IAAI,MAAM,YAAY,oBAAY,EAAE;YAChC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;SACpC;aAAM,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;YACrC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;SAC5B;aAAM;YACH,UAAU,GAAG,MAAM,CAAC;SACvB;QACD,KAAI,CAAC,OAAO,GAAG,yBAAsB,UAAU,mFAA+E,CAAC;;IACnI,CAAC;IAEL,6BAAC;AAAD,CAjBA,AAiBC,CAjB2C,KAAK,GAiBhD;AAjBY,wDAAsB","file":"RepositoryNotTreeError.js","sourcesContent":["import {EntitySchema} from \"../index\";\n\n/**\n * Thrown when repository for the given class is not found.\n */\nexport class RepositoryNotTreeError extends Error {\n    name = \"RepositoryNotTreeError\";\n\n    constructor(target: Function|EntitySchema<any>|string) {\n        super();\n        Object.setPrototypeOf(this, RepositoryNotTreeError.prototype);\n        let targetName: string;\n        if (target instanceof EntitySchema) {\n            targetName = target.options.name;\n        } else if (typeof target === \"function\") {\n            targetName = target.name;\n        } else {\n            targetName = target;\n        }\n        this.message = `Repository of the \"${targetName}\" class is not a TreeRepository. Try to apply @Tree decorator on your entity.`;\n    }\n\n}"],"sourceRoot":".."}